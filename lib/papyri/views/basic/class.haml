!!!
%html
  %head
    %title #{@name} :: #{@module}
    %link{:rel => "stylesheet", :href => path_url("assets/main.css"), :type => "text/css"}
    %link{:rel => "stylesheet", :href => 'http://fonts.googleapis.com/css?family=Maven+Pro:500', :type => 'text/css'}
    %link{:rel => "stylesheet", :href => 'http://fonts.googleapis.com/css?family=Voces', :type => 'text/css'}
    %link{:rel => "stylesheet", :href => 'http://fonts.googleapis.com/css?family=Cantata+One', :type => 'text/css'}
    %link{:rel => "stylesheet", :href => 'http://fonts.googleapis.com/css?family=Carme', :type => 'text/css'}

  %body

    .header
      .header-content
        .back-link
          - if @parent.is_a? Papyri::Project
            %a{:href=>@parent_filename, :alt=>"Go Up"}="&#x2196;"
          - else
            %a{:href=>@parent_filename, :alt=>"Go Up"}="#{@parent.name} &#x2196;"
        .title
          %h1
            #{@name}
            %span.module #{@module}
    %div


    .content
      %p #{@description}

      - if @dependencies.length > 0
        %h2
          %span Dependencies
        %ul
          - @dependencies.each do |d|
            %li
              %a{:href=>module_path(d)} #{d}

      - if @constructors.length > 0
        %h2
          %span Constructors
        %ul
          - @constructors.each do |f|
            %li.function
              %span.name #{f}#{(f.returns.nil? || f.returns.type.nil?) ? "" : " :: #{f.returns.type}"}
              %p.desc #{f.description}
              - unless f.returns.nil?
                %p.param
                  %span.returns returns
                  #{f.returns.description}
              - f.parameters.each do |p|
                %p.param
                  %span.name #{p.name}
                  #{p.description}

      - if @properties.length > 0
        %h2
          %span Properties
        %ul
          - @properties.each do |f|
            %li.function
              %span.name #{f}#{(f.returns.nil? || f.returns.type.nil?) ? "" : " :: #{f.returns.type}"}
              %p.desc #{f.description}
              - unless f.returns.nil?
                %p.param
                  %span.returns returns
                  #{f.returns.description}
              - f.parameters.each do |p|
                %p.param
                  %span.name #{p.name}
                  #{p.description}

      - if @methods.length > 0
        %h2
          %span Methods
        %ul
          - @methods.each do |f|
            %li.function
              %span.name #{f}#{(f.returns.nil? || f.returns.type.nil?) ? "" : " :: #{f.returns.type}"}
              %p.desc #{f.description}
              - unless f.returns.nil?
                %p.param
                  %span.returns returns
                  #{f.returns.description}
              - f.parameters.each do |p|
                %p.param
                  %span.name #{p.name}
                  #{p.description}

      - if @events.length > 0
        %h2
          %span Events
        %ul
          - @events.each do |f|
            %li.function
              %span.name #{f}#{(f.returns.nil? || f.returns.type.nil?) ? "" : " :: #{f.returns.type}"}
              %p.desc #{f.description}
              - unless f.returns.nil?
                %p.param
                  %span.returns returns
                  #{f.returns.description}
              - f.parameters.each do |p|
                %p.param
                  %span.name #{p.name}
                  #{p.description}
